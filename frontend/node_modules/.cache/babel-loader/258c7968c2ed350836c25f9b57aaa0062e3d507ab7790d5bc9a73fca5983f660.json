{"ast":null,"code":"var _jsxFileName = \"/Users/rakesh/cat-fact-tracker/frontend/src/components/CatFacts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAllCatFacts } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CatFacts() {\n  _s();\n  const [catFacts, setCatFacts] = useState([]);\n  const [showFacts, setShowFacts] = useState(false); // State to control visibility of facts\n\n  // Fetch all cat facts when the component is mounted\n  useEffect(() => {\n    const fetchCatFacts = async () => {\n      const facts = await getAllCatFacts();\n      setCatFacts(facts);\n    };\n    fetchCatFacts();\n  }, []);\n\n  // Toggle visibility of the cat facts list\n  const toggleFacts = () => {\n    setShowFacts(!showFacts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Cat Facts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleFacts,\n      children: showFacts ? 'Hide All Cat Facts' : 'Show All Cat Facts'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), showFacts && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: catFacts.map((fact, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: fact[1]\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this) /* fact[1] is the actual cat fact */)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(CatFacts, \"ydmeAgnOwAsE8yo0ER1VU19jww8=\");\n_c = CatFacts;\nexport default CatFacts;\nvar _c;\n$RefreshReg$(_c, \"CatFacts\");","map":{"version":3,"names":["React","useState","useEffect","getAllCatFacts","jsxDEV","_jsxDEV","CatFacts","_s","catFacts","setCatFacts","showFacts","setShowFacts","fetchCatFacts","facts","toggleFacts","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","fact","index","_c","$RefreshReg$"],"sources":["/Users/rakesh/cat-fact-tracker/frontend/src/components/CatFacts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getAllCatFacts } from '../api';\n\nfunction CatFacts() {\n  const [catFacts, setCatFacts] = useState([]);\n  const [showFacts, setShowFacts] = useState(false);  // State to control visibility of facts\n\n  // Fetch all cat facts when the component is mounted\n  useEffect(() => {\n    const fetchCatFacts = async () => {\n      const facts = await getAllCatFacts();\n      setCatFacts(facts);\n    };\n    fetchCatFacts();\n  }, []);\n\n  // Toggle visibility of the cat facts list\n  const toggleFacts = () => {\n    setShowFacts(!showFacts);\n  };\n\n  return (\n    <div>\n      <h2>All Cat Facts</h2>\n      <button onClick={toggleFacts}>\n        {showFacts ? 'Hide All Cat Facts' : 'Show All Cat Facts'}\n      </button>\n\n      {/* Show the cat facts list only if showFacts is true */}\n      {showFacts && (\n        <ul>\n          {catFacts.map((fact, index) => (\n            <li key={index}>{fact[1]}</li>  /* fact[1] is the actual cat fact */\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default CatFacts;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,KAAK,GAAG,MAAMV,cAAc,CAAC,CAAC;MACpCM,WAAW,CAACI,KAAK,CAAC;IACpB,CAAC;IACDD,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxBH,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,oBACEL,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBd,OAAA;MAAQe,OAAO,EAAEN,WAAY;MAAAC,QAAA,EAC1BL,SAAS,GAAG,oBAAoB,GAAG;IAAoB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,EAGRT,SAAS,iBACRL,OAAA;MAAAU,QAAA,EACGP,QAAQ,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBlB,OAAA;QAAAU,QAAA,EAAiBO,IAAI,CAAC,CAAC;MAAC,GAAfC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC,CAAE,oCACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACZ,EAAA,CAnCQD,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AAqCjB,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}