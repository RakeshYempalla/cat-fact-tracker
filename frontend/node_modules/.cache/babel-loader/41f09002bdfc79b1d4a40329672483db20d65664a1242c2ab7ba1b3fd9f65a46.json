{"ast":null,"code":"var _jsxFileName = \"/Users/rakesh/cat-fact-tracker/frontend/src/components/CatFacts.js\",\n  _s = $RefreshSig$();\n// src/components/CatFacts.js\nimport React, { useState, useEffect } from 'react';\nimport { getAllCatFacts } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CatFacts() {\n  _s();\n  const [catFacts, setCatFacts] = useState([]);\n  useEffect(() => {\n    const fetchCatFacts = async () => {\n      const facts = await getAllCatFacts();\n      console.log(facts);\n      setCatFacts(facts);\n    };\n    fetchCatFacts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Cat Facts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: catFacts.map((fact, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: fact[1]\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this) /* fact[1] is the actual cat fact */)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(CatFacts, \"FcNJJbDo4RzGSqegpnRBS90kXAw=\");\n_c = CatFacts;\nexport default CatFacts;\nvar _c;\n$RefreshReg$(_c, \"CatFacts\");","map":{"version":3,"names":["React","useState","useEffect","getAllCatFacts","jsxDEV","_jsxDEV","CatFacts","_s","catFacts","setCatFacts","fetchCatFacts","facts","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","fact","index","_c","$RefreshReg$"],"sources":["/Users/rakesh/cat-fact-tracker/frontend/src/components/CatFacts.js"],"sourcesContent":["// src/components/CatFacts.js\nimport React, { useState, useEffect } from 'react';\nimport { getAllCatFacts } from '../api';\n\nfunction CatFacts() {\n  const [catFacts, setCatFacts] = useState([]);\n\n  useEffect(() => {\n    const fetchCatFacts = async () => {\n      const facts = await getAllCatFacts();\n      console.log(facts);\n      setCatFacts(facts);\n    };\n    fetchCatFacts();\n  }, []);\n\n  return (\n    <div>\n      <h2>All Cat Facts</h2>\n      <ul>\n        {catFacts.map((fact, index) => (\n          <li key={index}>{fact[1]}</li>  /* fact[1] is the actual cat fact */\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default CatFacts;\n\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,KAAK,GAAG,MAAMR,cAAc,CAAC,CAAC;MACpCS,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBF,WAAW,CAACE,KAAK,CAAC;IACpB,CAAC;IACDD,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBb,OAAA;MAAAS,QAAA,EACGN,QAAQ,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBhB,OAAA;QAAAS,QAAA,EAAiBM,IAAI,CAAC,CAAC;MAAC,GAAfC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC,CAAE,oCACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACX,EAAA,CAtBQD,QAAQ;AAAAgB,EAAA,GAARhB,QAAQ;AAwBjB,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}